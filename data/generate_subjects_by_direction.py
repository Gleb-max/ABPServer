from data.db_session import db
from data.subject import Subject
from data.teacher import Teacher
from data.students_group import StudentsGroup
from data.study_direction import StudyDirection


def fill_teachers():
    if Teacher.query.count() > 1:
        return

    datas = [
        ('Минаев Виктор Степанович', 'к.т.н', "доцент", 'minv.sgu@yandex.ru',
         ['Физика', 'Теория электромагнитных полей']),
        ('Попов Михаил Викторович', 'к.т.н', 'доцент', 'popm.sgu@yandex.ru', ['Информатика']),
        ('Гузеев Игорь Сергеевич', 'к.т.н', 'доцент', 'Гузеев Игорь Сергеевич', ['Основы ООП', "Основы баз данных"]),
        ('Королев Петр Петрович', 'к.т.н', 'доцент', 'korp.sgu@yandex.ru', ['Физическая культура']),
        ('Смирнова Варвара Константиновна', 'д.ф-м.н.', 'профессор', 'профессор',
         ['Теория вероятностей', "Прикладной статистический анализ"]),

        ('Волчков Федор Ярославович', 'д.т.н', 'профессор', 'volf.sgu@yandex.ru', ['Информатика']),
        ('Пискарева Раиса Эммануиловна', 'к.т.н', 'доцент', 'pisr.sgu@yandex.ru', ['Начертальная геометрия']),
        ('Ромашкина Ксения Вячеславовна', 'к.т.н', 'доцент', 'pomk.sgu@yandex.ru', [' Русский язык и культура речи']),
        ('Астафьева Ирина Николаевна', 'к.т.н', 'доцент', 'asti.sgu@yandex.ru', ['Электроника и электротехника']),
        ('Фриск Олег Анатольевич', 'д.т.н', 'доцент', 'frio.sgu@yandex.ru', ['Сетевое оборудование']),
        ('Демин Дмитрий Валентинович', 'к.т.н', 'доцент', 'demd.sgu@yandex.ru', ['Линейная алгебра']),
        ('Куприн Михаил Потапович', 'к.ф-м.н.', 'доцент', 'kupm.sgu@yandex.ru', ['Математический анализ']),
        ('Дигуров Петр Константинович', 'к.т.н', 'доцент', 'degp.sgu@yandex.ru', ['Сети и системы коммутаций']),
        ('Самохин Тимур Николаевич', 'к.т.н', 'доцент', 'samt.sgu@yandex.ru', ['Сети следующего поколения']),
        ('Тутова Маргарита Симоновна', 'д.т.н', 'доцент', 'tutm.sgu@yandex.ru',
         ['Корпоративные информационные системы']),
    ]

    for ind, data in enumerate(datas, 1):
        teacher_sub = []
        for subject in data[4]:
            sub = Subject(subject)
            db.session.add(sub)
            teacher_sub.append(sub)

        teacher = Teacher(data[0], rank=data[1], post=data[2], email=data[3], subjects=teacher_sub)
        db.session.add(teacher)
        db.session.commit()


def fill_subjects():
    for student_group in StudentsGroup.query.all():
        if student_group.direction.name == 'Прикладная математика':
            subject_names = [
                'Физика',
                'Информатика',
                'Основы ООП',
                'Физическая культура',
                'Теория вероятностей',
                'Криптография',
                'Русский язык и культура речи',
                'Электроника и электротехника',
                'Линейная алгебра',
                'Математический анализ',
                'Основы баз данных',
                'Теория электромагнитных полей',
                'Математическая статистика',
                'Прикладной статистический анализ',
            ]
        elif student_group.direction.name == 'Информатика и вычислительная техника':
            subject_names = [
                'Физика',
                'Информатика',
                'Основы ООП',
                'Физическая культура',
                'Теория вероятностей',
                'Криптография',
                'Начертательная геометрия',
                'Русский язык и культура речи',
                'Электроника и электротехника',
                'Линейная алгебра',
                'Математический анализ',
                'Корпоративные информационные системы',
                'Математическая статистика',
            ]
        elif student_group.direction.name == 'Автоматизация управления в технических системах':
            subject_names = [
                'Физика',
                'Информатика',
                'Основы ООП',
                'Физическая культура',
                'Теория вероятностей',
                'Начертательная геометрия',
                'Русский язык и культура речи',
                'Электроника и электротехника',
                'Линейная алгебра',
                'Математический анализ',
                'Корпоративные информационные системы',
                'Основы баз данных',
                'Математическая статистика',
            ]
        elif student_group.direction.name == 'Инфокоммуникационные технологии' or student_group.direction.name == 'Защищенные сети и системы':
            subject_names = [
                'Физика',
                'Информатика',
                'Физическая культура',
                'Криптография',
                'Начертательная геометрия',
                'Русский язык и культура речи',
                'Электроника и электротехника',
                "Сетевое оборудование",
                'Линейная алгебра',
                'Математический анализ',
                'Сети и системы коммутаций',
                'Сети следующего поколения',
                'Теория электромагнитных полей',
            ]
        else:
            continue

        if student_group.subjects:
            student_group.subjects.clear()
        else:
            student_group.subjects = []
        for i in subject_names:
            subject = Subject.query.filter_by(name=i).first()
            if subject:
                student_group.subjects.append(subject)
            else:
                print('subject not foound', subject)
        db.session.commit()
